## Entités

- User (Client/Vendeur/Admin)
    - name - varchar 255
    - surname - varchar 255
    - email - varchar 255
    - password - varchar 255
    - status (seller / client / admin) - array
- Category
    - name - varchar 255
- Article
    - title - varchar 255
    - content - text
    - author - relation authorID
    - status (published / drafted) - boolean
    - createdAt - dateTime
    - updatedAt - dateTime
- Product (ajouter UN SEUL paramètre personnalisé tel qu'une couleur, une marque etc.)
    - name - varchar 255
    - price - float
    - description - text
    - image - text
    - brand - varchar 255
    - stock - Int
    - status (published / drafted) - boolean
    - seller - relation Seller
    - category - relation Category
- Cart
    - product - relation Product
    - amount - Int

### Pages visitor

- Articles
    - view articles (3 derniers articles du plus récent au plus ancien)
- Products
    - view all products
    - Formulaire permettant de trier par :
        - prix
        - vendeur
        - catégorie
        - liste par défaut les articles des plus vieux au plus récent
        - doit aussi permettre d'ordonner par date de création (ASC ou DESC)
- Connection
- Create account

### Pages buyer

- Articles
    - view all articles
- Products
    - view products (name, description, image, price, seller, category, brand)
        - add to cart + quantity + brand
    - sort products
- Cart
    - Add product
    - Delete product
    - Change product quantity
    - Buy & empty cart
- Profile
    - name, surname, email, status (seller / buyer)
    - Edit profile (name, surname, email, status)
    - Edit password

### Pages seller

- Articles
    - view all articles
- Products
    - view products (name, description, image, price, seller, category, brand)
        - add to cart + quantity + brand
    - sort products
    - create product
    - modify product
    - delete product
- Cart
    - Add product
    - Delete product
    - Change product quantity
    - Buy & empty cart
- Profile
    - name, surname, email, status (seller / buyer), seller’s products
    - Edit profile (name, surname, email, status)
    - Edit password

### Pages admin (different header)

- Articles
    - view articles
    - sort articles (ASC / DESC)
    - create article
    - modify article
    - delete article
- Products
    - view products
    - sort products (ASC / DESC)
    - create product
    - modify product
    - delete product
- Categories
    - view categories
    - sort categories (ASC / DESC)
    - create categories
    - modify categories
    - delete categories
- User
    - List of Users
    - Dashboard stats products, categories & quantities
- Profile
    - name, surname, email, status, seller’s products
    - Edit profile (name, surname, email)
    - Edit password

Les articles et produits doivent avoir une option de statut, publié ou brouillon. Ils doivent pas être affiché hors partie admin si ils sont en brouillon.

### Un menu de navigation en haut de page

- Les pages doivent y être renseignées, ainsi que les options de connexion et de navigation selon les roles et permissions ainsi qu'un lien vers le panier de l'utilisateur.

### Une page d'inscription

- Nom, prénom, email, mot de passe et statut désiré. Vendeur ou Client

### Une page d'accueil accessible sans connexion

- Elle doit renvoyer les 3 derniers articles du plus récent au plus ancien. Vos articles doivent avoir un titre, un contenu, un auteur, une date de création et d'édition.

### Une page produit accessible sans connexion

- Elle doit lister tous les produits disponibles. On doit y voir, le nom, description, image, prix, vendeur, catégorie du produit ainsi que votre paramètre personnalisé.
- La page doit aussi avoir un formulaire permettant de trier par prix, vendeur, catégorie et doit lister par défaut les articles des plus vieux au plus récent, mais le formulaire doit aussi permettre d'ordonner par date de création. (ASC ou DESC).
- Les produits doivent avoir des liens dirigeants vers leur page produit personnalisée.
- Si un produit a son stock inférieur à 1, il ne doit pas apparaitre.
- Si un produit n'est pas en statut publié, il ne doit pas apparaitre.

### Une page produit accessible AVEC connexion

- Cette page doit afficher à nouveau toutes les infos du produit et également un formulaire d'action permettant de choisir la quantité désirée, le choix du paramètre personnalisé au sein d'une liste, ainsi que de l'ajouter au panier.

### Une page profil accessible avec connexion et seulement par l'utilisateur connecté actuellement

- Elle doit lister les infos de l'utilisateur, nom, prénom, email, statut. Ses produits si il est vendeur.
- La page doit également renvoyer vers l'edition des infos de l'utilisateur d'une part(nom, prénom, email), et l'édition de son mot de passe d'autre part. Ces formulaires et pages doivent etre indépendants.
- Si il est vendeur, il doit pouvoir accéder à la création d'un produit, l'édition et suppression des siens.
- Si il est client, il doit pouvoir choisir de devenir Vendeur depuis l'édition de son profil

### Une page panier accessible avec connexion

- Les utilisateurs doivent avoir accès à leur panier. Listant, les produits ajoutés à leur panier et la quantité associée ainsi que l'option personnalisée choisie.
- Le panier doit afficher un bouton "Acheter" vidant le panier et ajustant les stocks restant sur les produits venant d'être achetés.

### Une page admin accessible UNIQUEMENT par l'admin

- L'admin doit y avoir un header différent de la base : Avec en lien, articles, produits, catégories, utilisateurs.
- La page d'accueil de l'admin doit renseigner un panel de stats avec le nombre existant de chacune des entités.
- Chaque page doit avoir un formulaire de filtre permettant de trier avec les attributs respectifs de chaque entité.
- Produits : Vendeur, Catégories, DESC ou ASC
- Articles : DESC ou ASC
- Catégories : DESC ou ASC
- Users : Statut (vendeur/client) L'admin doit pouvoir naviguer de son interface au site classique. Il doit avoir un bandeau ou un rappel visuel distinctif de son statut en tout temps sur toutes les pages lorsqu'il est connecté.

## Attentes générales

- Votre repo github doit etre nommé selon la structure suivante :

> https://github.com/utilisateur/symfony-ipssi-rendu + vos deux initiales Exemple : https://github.com/utilisateur/symfony-ipssi-rendu-cj-cj
> 
- Vous serez notés sur la qualité du nommage de vos commit, de vos fichiers, de vos fonctions, de vos routes et la cohérence de l'ensemble. Soyez logiques et organisés.
- Vous serez également attendu sur un front clair et lisible. Bootstrap et autres library sont autorisées. Utilisez des couleurs, des typos qui rendront votre projet lisible.

Merci d'ajouter un dossier SQL a la racine de votre projet et d'y joindre l'export de votre base de données